CREATE SCHEMA IF NOT EXISTS yrkesco;

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS school (
        school_id SERIAL PRIMARY KEY,
        name VARCHAR(50) NOT NULL,
        location VARCHAR(50) NOT NULL
    );

SET search_path to yrkesco;


CREATE TABLE
    IF NOT EXISTS program (
        program_id SERIAL PRIMARY KEY,
        name VARCHAR(50) NOT NULL
    );    



CREATE TABLE
    IF NOT EXISTS program_enrollment (
        school_id INTEGER NOT NULL,
        program_id INTEGER NOT NULL, 
        PRIMARY KEY (school_id, program_id),
        FOREIGN KEY (school_id) REFERENCES school (school_id) ON DELETE CASCADE,
        FOREIGN KEY (program_id) REFERENCES program (program_id) ON DELETE CASCADE
    );

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS staff_info (
        staff_info_id SERIAL PRIMARY KEY,
        first_name VARCHAR(50) NOT NULL,
        last_name VARCHAR(50) NOT NULL,
        address VARCHAR(255) NOT NULL,
        email VARCHAR(100) UNIQUE NOT NULL,
        hire_date DATE NOT NULL,
        personal_number VARCHAR(15) UNIQUE NOT NULL        
    );

CREATE TABLE
    IF NOT EXISTS course_director (
        course_director_id SERIAL PRIMARY KEY, 
        staff_info_id INTEGER NOT NULL, 
        FOREIGN KEY (staff_info_id) REFERENCES staff_info (staff_info_id) ON DELETE CASCADE
    );

CREATE TABLE
    IF NOT EXISTS class (
        class_id SERIAL PRIMARY KEY,
        program_id INTEGER NOT NULL, 
        course_director_id INTEGER NOT NULL, 
        year INTEGER NOT NULL,
        FOREIGN KEY (course_director_id) REFERENCES course_director (course_director_id) ON DELETE CASCADE,
        FOREIGN KEY (program_id) REFERENCES program (program_id) ON DELETE CASCADE
    );

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS course (
        course_id SERIAL PRIMARY KEY,
        name VARCHAR(50) NOT NULL,
        points INTEGER NOT NULL,
        description VARCHAR(255)    
    );

CREATE TABLE
    IF NOT EXISTS course_enrollment (
        course_id INTEGER NOT NULL,
        class_id INTEGER NOT NULL,
        grade VARCHAR(10) NOT NULL, 
        PRIMARY KEY (course_id, class_id),
        FOREIGN KEY (course_id) REFERENCES course (course_id) ON DELETE CASCADE,
        FOREIGN KEY (class_id) REFERENCES class (class_id) ON DELETE CASCADE
    );

SET search_path to yrkesco;


CREATE TABLE
    IF NOT EXISTS course_outside_program (
        course_id INTEGER NOT NULL,
        school_id INTEGER NOT NULL, 
        PRIMARY KEY (course_id, school_id),
        FOREIGN KEY (course_id) REFERENCES course (course_id) ON DELETE CASCADE,
        FOREIGN KEY (school_id) REFERENCES school (school_id) ON DELETE CASCADE
    );


SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS student (
        student_id SERIAL PRIMARY KEY
    ); 

CREATE TABLE
    IF NOT EXISTS student_info (
        student_id INTEGER PRIMARY KEY,
        first_name VARCHAR(50) NOT NULL,
        last_name VARCHAR(50) NOT NULL,
        email VARCHAR(100) UNIQUE NOT NULL,
        personal_number VARCHAR(15) UNIQUE,    
        FOREIGN KEY (student_id) REFERENCES student (student_id) ON DELETE CASCADE    
    );

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS consult_info (
        consult_info_id SERIAL PRIMARY KEY,
        staff_info_id INTEGER NOT NULL,
        personal_number VARCHAR(12) UNIQUE NOT NULL, 
        company_name VARCHAR(100) NOT NULL,
        company_info VARCHAR(100) NOT NULL,  
        organization_number BIGINT NOT NULL,
        approved_ftax BOOLEAN NOT NULL,
        company_address VARCHAR (255) NOT NULL,
        fee_hour INTEGER NOT NULL,
        FOREIGN KEY (staff_info_id) REFERENCES staff_info (staff_info_id) ON DELETE CASCADE    

    );


SET search_path to yrkesco;

CREATE TABLE IF NOT EXISTS teacher (
    teacher_id SERIAL PRIMARY KEY,
    staff_info_id INTEGER,
    consult_info_id INTEGER,
    FOREIGN KEY (staff_info_id) REFERENCES staff_info (staff_info_id) ON DELETE CASCADE,
    FOREIGN KEY (consult_info_id) REFERENCES consult_info (consult_info_id) ON DELETE CASCADE,
    CHECK (
        (staff_info_id IS NOT NULL AND consult_info_id IS NULL)
     OR (staff_info_id IS NULL AND consult_info_id IS NOT NULL)
    )
);


CREATE TABLE
    IF NOT EXISTS teacher_list (
        course_id INTEGER NOT NULL,
        teacher_id INTEGER NOT NULL, 
        PRIMARY KEY (course_id, teacher_id),
        FOREIGN KEY (course_id) REFERENCES course (course_id) ON DELETE CASCADE,
        FOREIGN KEY (teacher_id) REFERENCES teacher (teacher_id) ON DELETE CASCADE
    );

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS vocational_provider (
        vocational_provider_id SERIAL PRIMARY KEY,
        staff_info_id INTEGER, 
        FOREIGN KEY (staff_info_id) REFERENCES staff_info (staff_info_id) ON DELETE CASCADE   
    );    

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS student_enrollment (
        course_id INTEGER NOT NULL,
        student_id INTEGER NOT NULL, 
        PRIMARY KEY (course_id, student_id),
        FOREIGN KEY (course_id) REFERENCES course (course_id) ON DELETE CASCADE,
        FOREIGN KEY (student_id) REFERENCES student (student_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS yrkesco.vocational_provider_location (
    vocational_provider_id INTEGER NOT NULL,
    school_id INTEGER NOT NULL,
    PRIMARY KEY (vocational_provider_id, school_id),
    FOREIGN KEY (vocational_provider_id) REFERENCES vocational_provider(vocational_provider_id) ON DELETE CASCADE,
    FOREIGN KEY (school_id) REFERENCES school(school_id) ON DELETE CASCADE
);















    