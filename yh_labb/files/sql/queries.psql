--- Showing which programs that run on which schools

SET search_path TO yrkesco;

SELECT
    p.name AS program_name,
    STRING_AGG(s.name, ', ') AS schools_offering_program
FROM program_enrollment AS pe
JOIN program AS p ON pe.program_id = p.program_id
JOIN school AS s ON pe.school_id = s.school_id
GROUP BY p.name;


--- Staff list

SELECT 
    s.first_name || ' ' || s.last_name AS name,
    CASE 
        WHEN cd.course_director_id IS NOT NULL THEN 'Course Director'
        WHEN vp.vocational_provider_id IS NOT NULL THEN 'Vocational Provider'
        WHEN t.teacher_id IS NOT NULL THEN 'Teacher'
        ELSE 'Staff'
    END AS profession,
    CASE 
        WHEN ci.consult_info_id IS NOT NULL THEN 'Consultant'
        ELSE 'Hired Staff'
    END AS staff_type
FROM yrkesco.staff_info s
LEFT JOIN yrkesco.consult_info ci ON s.staff_info_id = ci.staff_info_id
LEFT JOIN yrkesco.teacher t 
    ON t.staff_info_id = s.staff_info_id OR (ci.consult_info_id IS NOT NULL AND t.consult_info_id = ci.consult_info_id)
LEFT JOIN yrkesco.course_director cd ON cd.staff_info_id = s.staff_info_id
LEFT JOIN yrkesco.vocational_provider vp ON vp.staff_info_id = s.staff_info_id
ORDER BY staff_type, profession, name;


--- Showing which Vocational providers that has responsible for which school

SET search_path TO yrkesco;

SELECT
    vp.vocational_provider_id,
    si.first_name || ' ' || si.last_name AS provider_name,
    STRING_AGG(s.name, ', ') AS schools
FROM vocational_provider_location vpl
JOIN vocational_provider vp ON vp.vocational_provider_id = vpl.vocational_provider_id
JOIN staff_info si ON vp.staff_info_id = si.staff_info_id
JOIN school s ON vpl.school_id = s.school_id
GROUP BY vp.vocational_provider_id, si.first_name, si.last_name;

--- Which programs and classes are the Course Directors responsible for. 

SET search_path TO yrkesco;

SELECT
    si.first_name || ' ' || si.last_name AS course_director,
    c.class_id,
    p.name AS program_name
FROM yrkesco.class c
JOIN yrkesco.course_director cd ON c.course_director_id = cd.course_director_id
JOIN yrkesco.staff_info si ON cd.staff_info_id = si.staff_info_id
JOIN yrkesco.program p ON c.program_id = p.program_id
ORDER BY course_director, class_id;


--- To see all courses bound for the different programs in year 2022. 


SET search_path TO yrkesco;

SELECT
    p.name AS program,
    c.name AS course
FROM course_enrollment ce
JOIN class cl ON ce.class_id = cl.class_id
JOIN program p ON cl.program_id = p.program_id
JOIN course c ON ce.course_id = c.course_id
WHERE cl.year = 2022
ORDER BY p.name, c.name;


-- How many of the Data Engineer students of year 2022 got an IG in the course Python programming?

SELECT COUNT(DISTINCT se.student_id) AS num_students
FROM yrkesco.student_enrollment se
JOIN yrkesco.course c ON se.course_id = c.course_id
JOIN yrkesco.class cl ON cl.class_id IN (
    SELECT ce.class_id
    FROM yrkesco.course_enrollment ce
    WHERE ce.course_id = c.course_id
)
JOIN yrkesco.program p ON cl.program_id = p.program_id
JOIN yrkesco.program_enrollment pe ON p.program_id = pe.program_id
JOIN yrkesco.school s ON pe.school_id = s.school_id
WHERE 
    s.location = 'GÃ¶teborg'
    AND c.name = 'Python Programming'
    AND p.name = 'Data Engineer'
    AND cl.year = 2022
    AND se.grade = 'IG';


-- How many program students got the grade G in the year of 2022 vs 2023?    


SET search_path TO yrkesco;

SELECT
    p.name AS program,
    cl.year,
    ROUND(
        100.0 * COUNT(CASE WHEN se.grade = 'G' THEN 1 END) / COUNT(se.grade),
        1
    ) AS percent_G
FROM student_enrollment se
JOIN course c ON se.course_id = c.course_id
JOIN course_enrollment ce ON ce.course_id = c.course_id
JOIN class cl ON ce.class_id = cl.class_id
JOIN program p ON cl.program_id = p.program_id
WHERE cl.year IN (2022, 2023)
GROUP BY p.name, cl.year
ORDER BY p.name, cl.year;

--- How many students study courses outside of their program?

SET search_path TO yrkesco;

SELECT
    s.name AS school,
    c.name AS course_name,
    COUNT(se.student_id) AS num_students
FROM student_enrollment se
JOIN course c ON se.course_id = c.course_id
JOIN course_outside_program cop ON se.course_id = cop.course_id
JOIN school s ON cop.school_id = s.school_id
GROUP BY s.name, c.name
ORDER BY s.name, c.name;

--- The name of the teachers and how many courses they teach

SELECT 
    s.first_name || ' ' || s.last_name AS teacher_name,
    COUNT(tl.course_id) AS courses_taught
FROM yrkesco.teacher t
LEFT JOIN yrkesco.consult_info ci ON t.consult_info_id = ci.consult_info_id
LEFT JOIN yrkesco.staff_info s 
    ON s.staff_info_id = t.staff_info_id OR s.staff_info_id = ci.staff_info_id
LEFT JOIN yrkesco.teacher_list tl 
    ON t.teacher_id = tl.teacher_id
GROUP BY teacher_name
ORDER BY courses_taught DESC;

--- Counting grades per class year

SELECT 
    cl.year,
     COUNT(CASE WHEN se.grade = 'G' THEN 1 END) AS g_count,
    COUNT(CASE WHEN se.grade = 'VG' THEN 1 END) AS vg_count,
    COUNT(CASE WHEN se.grade = 'IG' THEN 1 END) AS ig_count
FROM yrkesco.student_enrollment se
JOIN yrkesco.course_enrollment ce ON se.course_id = ce.course_id
JOIN yrkesco.class cl ON ce.class_id = cl.class_id
WHERE cl.year IN (2022, 2023, 2024)
GROUP BY cl.year
ORDER BY cl.year;

--- Query which courses the consultants have

SET search_path TO yrkesco;

SELECT 
    s.first_name || ' ' || s.last_name AS consultant_name,
    c.company_name,
    co.name AS course_name,
    co.points
FROM yrkesco.teacher t
JOIN yrkesco.consult_info c ON t.consult_info_id = c.consult_info_id
JOIN yrkesco.staff_info s ON c.staff_info_id = s.staff_info_id
JOIN yrkesco.teacher_list tl ON t.teacher_id = tl.teacher_id
JOIN yrkesco.course co ON tl.course_id = co.course_id
ORDER BY consultant_name, course_name;


--- Which school has most students?

SET search_path TO yrkesco;

SELECT
    s.name AS school,
    COUNT(DISTINCT se.student_id) AS total_students
FROM student_enrollment se
JOIN course c ON se.course_id = c.course_id
JOIN course_enrollment ce ON c.course_id = ce.course_id
JOIN class cl ON ce.class_id = cl.class_id
JOIN program p ON cl.program_id = p.program_id
JOIN program_enrollment pe ON p.program_id = pe.program_id
JOIN school s ON pe.school_id = s.school_id
GROUP BY s.name
ORDER BY total_students DESC;










