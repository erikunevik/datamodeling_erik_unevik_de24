CREATE SCHEMA IF NOT EXISTS yrkesco;

SET search_path to yrkesco;



CREATE TABLE
    IF NOT EXISTS school (
        school_id SERIAL PRIMARY KEY,
        name VARCHAR(50) NOT NULL,
        location VARCHAR(50) NOT NULL,
        address VARCHAR(255)
    );

SET search_path to yrkesco;


CREATE TABLE
    IF NOT EXISTS program (
        program_id SERIAL PRIMARY KEY,
        name VARCHAR(50) NOT NULL
    );    

CREATE TABLE
    IF NOT EXISTS program_enrollment (
        school_id INTEGER NOT NULL,
        program_id INTEGER NOT NULL, 
        PRIMARY KEY (school_id, program_id),
        FOREIGN KEY (school_id) REFERENCES school (school_id) ON DELETE CASCADE,
        FOREIGN KEY (program_id) REFERENCES program (program_id) ON DELETE CASCADE
    );

SET search_path to yrkesco;

CREATE TABLE
    IF NOT EXISTS staff_info (
        staff_info_id SERIAL PRIMARY KEY,
        first_name VARCHAR(50) NOT NULL,
        last_name VARCHAR(50) NOT NULL,
        address VARCHAR(255),
        email VARCHAR(100) UNIQUE,
        hire_date DATE,
        personal_number INTEGER unique        
    );

CREATE TABLE
    IF NOT EXISTS course_director (
        course_director_id SERIAL PRIMARY KEY, 
        staff_info_id INTEGER NOT NULL, 
        FOREIGN KEY (staff_info_id) REFERENCES staff_info (staff_info_id) ON DELETE CASCADE
    );

CREATE TABLE
    IF NOT EXISTS class (
        class_id SERIAL PRIMARY KEY,
        program_id INTEGER NOT NULL, 
        course_director_id INTEGER NOT NULL, 
        FOREIGN KEY (course_director_id) REFERENCES course_director (course_director_id) ON DELETE CASCADE,
        FOREIGN KEY (program_id) REFERENCES program (program_id) ON DELETE CASCADE
    );






    Table class {
class_id int [not null, primary key]
program_id int [not null, ref: > program.program_id]
course_director_id int [not null, ref: >  course_director.course_director_id]
}







CREATE TABLE
    IF NOT EXISTS Hospitaldepartment (
        hospital_id INTEGER NOT NULL,
        department_id INTEGER NOT NULL, 
        PRIMARY KEY (hospital_id, department_id),
        FOREIGN KEY (hospital_id) REFERENCES Hospital (hospital_id) ON DELETE CASCADE,
        FOREIGN KEY (department_id) REFERENCES Department (department_id) ON DELETE CASCADE
    );


-- CREATE TABLE
--     IF NOT EXISTS Hospital (
--         hospital_id SERIAL PRIMARY KEY,
--         name VARCHAR(50) NOT NULL,
--         address VARCHAR(255)
--     );
-- 0
-- SET search_path to exercise2b;

-- CREATE TABLE
--     IF NOT EXISTS Doctor (
--         doctor_id SERIAL PRIMARY KEY,
--         name VARCHAR(50) NOT NULL
--     );

-- SET search_path to exercise2b;

-- CREATE TABLE
--     IF NOT EXISTS Department (
--         department_id SERIAL PRIMARY KEY,
--         name VARCHAR(50) NOT NULL
--     );

-- SET search_path to exercise2b;



-- SET search_path to exercise2b;

-- CREATE TABLE IF NOT EXISTS
--     exercise2b.workplace_doctor (
--         doctor_id INTEGER NOT NULL,
--         department_id INTEGER NOT NULL,
--         hospital_id INTEGER NOT NULL,
--         PRIMARY KEY (doctor_id, department_id, hospital_id),
--         FOREIGN KEY (doctor_id) REFERENCES exercise2b.doctor (doctor_id) ON DELETE CASCADE,
--         FOREIGN KEY (department_id) REFERENCES exercise2b.department (department_id) ON DELETE CASCADE,
--         FOREIGN KEY (hospital_id) REFERENCES exercise2b.hospital (hospital_id) ON DELETE CASCADE
--     );
